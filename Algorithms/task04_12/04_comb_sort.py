import math


def comb_sort(ls):  # суть сортировки расчёской в ускорение пузырьковой сортировки
    gap = len(ls)  # для начала переносим малые значения (так называемые turtles (черепахи)) с конца списка в начало, чтобы сократить время алгоритма
    swap = True
    while gap != 1 or swap:  # gap - это как раз то значение с конца списка, которое мы переносим в конец, если оно окажется большим
        gap = math.floor(gap/1.3)  # число 1.3 было выбрано самими авторами этого алгоритма исходя из опыта более 200000 алгоритмов
        if gap <= 1:
            gap = 1
        swap = False
        for i in range(0, len(ls)-gap):  # далее идёт обычная пузырьковая сортировка, только сначала сравниваются элементы с разных концов списка, потом элементы поближе и т.д.
            if ls[i] > ls[i+gap]:
                ls[i], ls[i+gap] = ls[i+gap], ls[i]
                swap = True


if __name__ == "__main__":
    print("Введите числа через пробел для сортировки в порядке возрастания:")
    input_array = input()  # данные на вход
    split_array = [float(i) for i in input_array.split()]  # разделяем входные данные на отдельные числа
    comb_sort(split_array)  # сортируем через "расчёску"
    print("Отсортированный список:\n", split_array)
