def merge_sort(arr):  # сортировка слиянием
    N = len(arr)
    
    if N > 1:
        left_arr = arr[:N//2]  # нужно делить список пополам, пока не остануться списки из двух элементов, которые мы можем легко отсортировать
        right_arr = arr[N//2:]

        merge_sort(left_arr)  # сортировка левой части
        merge_sort(right_arr)  # сортировка правой части
        
        i = j = k = 0
        L, R = len(left_arr), len(right_arr)

        while i < L and j < R:  # само слияние происходит так: идём по обоим частям одновременно, добавляя наименьший элемент по порядку из левой или правой части
            if left_arr[i] <= right_arr[j]:
                arr[k] = left_arr[i]
                i += 1
            else:
                arr[k] = right_arr[j]
                j += 1
            k += 1

        arr[k:] = left_arr[i:] + right_arr[j:] # т.к. мы сливаем левую и правую часть до тех пор, пока в одной из них не останется элементов, то логично, что в другой части ещё будут элементы, которые добавим в конец списка, т.к. они определённо будут наибольшими


if __name__ == "__main__":
    print("Введите числа через пробел для сортировки в порядке возрастания:")
    input_array = input()  # данные на вход
    split_array = [float(i) for i in input_array.split()]  # разделяем входные данные на отдельные числа
    merge_sort(split_array)  # сортировка слиянием
    print("Отсортированный список:\n", split_array)

